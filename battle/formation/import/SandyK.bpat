% Automatically dumped from section 07

#new:Actor $SandyK
{
% stats
[Index]        9Eb 
[Level]        16`b 
[MaxHP]         1`b 
[Coins]         0`b 
[Flags]       00000000 
[StatusTable] $StatusTable_YNinjakoopa_07 
% ai
[PartsCount]    1`s 
[PartsTable]  $PartsTable_YNinjakoopa_07 
[Script]      $Script_Init_YNinjakoopa_07 
% move effectiveness
[Escape]        0`b 
[Item]          0`b 
[AirLift]       0`b 
[Hurricane]     0`b % Bow's "Spook" as well
[UpAndAway]     0`b 
[PowerBounce]  85`b 
[SpinSmash]     0`b % weight (0-4)
% ui positions
[Size]         38`b  42`b % width height
[HealthBar]     0`b   0`b % dx dy
[StatusTurn]  -10`b  20`b % dx dy
[StatusIcon]   10`b  20`b % dx dy
}

#new:DefenseTable $DefenseTable_8022E440_07 {
.Element:Normal 00000003
.Element:End
}

#new:DefenseTable $DefenseTable_8022E44C_07 {
.Element:Normal 00000001
.Element:End
}

#new:StatusTable $StatusTable_YNinjakoopa_07 {
.Status:Normal      0`
.Status:Default     0`
.Status:Sleep      60`
.Status:Poison      0`
.Status:Frozen      0`
.Status:Dizzy      75`
.Status:Fear        0`
.Status:Static      0`
.Status:Paralyze   75`
.Status:Shrink    100`
.Status:Stop       75`
.Status:DefaultTurnMod    0`
.Status:SleepTurnMod     -1`
.Status:PoisonTurnMod     0`
.Status:FrozenTurnMod     0`
.Status:DizzyTurnMod     -1`
.Status:FearTurnMod       0`
.Status:StaticTurnMod     0`
.Status:ParalyzeTurnMod  -1`
.Status:ShrinkTurnMod    -1`
.Status:StopTurnMod      -2`
.Status:End
}

#new:PartsTable $PartsTable_YNinjakoopa_07 {
00800000 01000000 FB2400FF $IdleAnimations_8022E550_07 $DefenseTable_8022E440_07 00001000 00000000 00000000 00000000 
}

#new:IdleAnimations $IdleAnimations_8022E550_07 {
.Status:Normal    00660204
.Status:Stone     00660200
.Status:Sleep     00660215
.Status:Poison    00660200
.Status:Stop      00660200
.Status:Static    00660200
.Status:Paralyze  00660200
.Status:Paralyze  00660200
.Status:Dizzy     00660218
.Status:Dizzy     00660218
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022E61C_07 {
.Status:Normal    0066020C
.Status:Stone     00660217
.Status:Sleep     00660217
.Status:Poison    00660217
.Status:Stop      00660217
.Status:Static    00660217
.Status:Paralyze  00660217
.Status:Paralyze  00660217
.Status:Dizzy     00660222
.Status:Dizzy     00660222
.Status:End
}

#new:IdleAnimations $IdleAnimations_8022E551_07 {
    .Status:Normal    00660202
    .Status:Stone     00660200
    .Status:Sleep     00660215
    .Status:Poison    00660200
    .Status:Stop      00660200
    .Status:Static    00660200
    .Status:Paralyze  00660200
    .Status:Paralyze  00660200
    .Status:Dizzy     00660218
    .Status:Dizzy     00660218
    .Status:End
    }

#new:Script $Script_Init_YNinjakoopa_07 {
    0:  Call  BindTakeTurn  ( .Actor:Self $Script_TakeTurn_YNinjakoopa_07 )
   14:  Call  BindIdle      ( .Actor:Self $Script_Idle_YNinjakoopa_07 )
   28:  Call  BindHandleEvent   ( .Actor:Self $Script_HandleEvent_YNinjakoopa_07 )
   3C:  Call  BindNextTurn  ( .Actor:Self $Script_NextTurn_YNinjakoopa_07 )
   88:  Call  HPBarToHome   ( .Actor:Self )
   B4:  Call  SetActorVar   ( .Actor:Self 00000001 00000000 )
   CC:  Call  SetActorVar   ( .Actor:Self 00000002 00000000 )
   E4:  Return
   EC:  End
}

#new:Script $Script_Idle_YNinjakoopa_07 {
    
    0:  Return
    8:  End
}

#new:Script $Script_80220158_05 {
    0:  Switch  *Var0 
    C:  	Case  ==  00000000 
   18:  		If  *Var1  &  00041000 
   28:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
   44:  			Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
   60:  			Call  $Function_802187E0_05 ( FFFFFFF6 00000014 0000000A 00000014 )
   7C:  		Else
   84:  			Call  SetTargetOffset       ( .Actor:Self 00000001  -4`  32` )
   A0:  			Call  8027D4C8  ( FFFFFF81 00000001 FFFFFFFF FFFFFFFC )
   BC:  			Call  $Function_802187E0_05 ( FFFFFFF1 00000020 00000005 00000020 )
   D8:  		EndIf
   E0:  	Case  ==  00000001 
   EC:  		Call  SetTargetOffset       ( .Actor:Self 00000001  -5`  15` )
  108:  		Call  8027D4C8  ( FFFFFF81 00000001 00000000 00000000 )
  124:  		Call  $Function_802187E0_05 ( FFFFFFF6 00000014 0000000A 00000014 )
  140:  EndSwitch
  148:  Return
  150:  End
}

#new:IntTable $IntTable_80230CD0_07 {
00000009 00000010 00000016 0000001A 0000001E 00000020 00000021 00000020 
0000001E 0000001A 00000016 00000010 00000009 00000000 00000004 00000006 
00000007 00000006 00000004 00000000 00000002 00000000 
}

#new:Script $Script_HandleEvent_YNinjakoopa_07 {
    0:  Call  UseIdleAnimation  ( .Actor:Self .False )
   14:  Call  EnableIdleScript  ( .Actor:Self 00000000 )
   28:  Call  GetLastEvent      ( .Actor:Self *Var0 )
   3C:  Switch  *Var0 
   48:  	CaseOR  ==  .Event:HitCombo % 9
   54:  	CaseOR  ==  .Event:Hit % A
   60:  		SetConst  *Var0  00000001 
   70:  		SetConst  *Var1  0066020B 
   80:  		ExecWait  DoNormalHit 
   8C:  	EndCaseGroup
   94:  	Case  ==  .Event:BurnHit % E
   A0:  		SetConst  *Var0  00000001 
   B0:  		SetConst  *Var1  0066020E 
   C0:  		SetConst  *Var2  0066020F 
   D0:  		ExecWait  DoBurnHit 
   DC:  	Case  ==  .Event:BurnDeath % 24
   E8:  		SetConst  *Var0  00000001 
   F8:  		SetConst  *Var1  0066020E 
  108:  		SetConst  *Var2  0066020F 
  118:  		ExecWait  DoBurnHit 
  124:  		SetConst  *Var0  00000001 
  134:  		SetConst  *Var1  0066020F 
  144:  		ExecWait  DoDeath 
  150:  		Return
  158:  	Case  ==  .Event:SpinSmashHit % B
  164:  		SetConst  *Var0  00000001 
  174:  		SetConst  *Var1  0066020B 
  184:  		ExecWait  DoSpinSmashHit 
  190:  	Case  ==  .Event:SpinSmashDeath % 21
  19C:  		SetConst  *Var0  00000001 
  1AC:  		SetConst  *Var1  0066020B 
  1BC:  		ExecWait  DoSpinSmashHit 
  1C8:  		SetConst  *Var0  00000001 
  1D8:  		SetConst  *Var1  0066020B 
  1E8:  		ExecWait  DoDeath 
  1F4:  		Return
  1FC:  	Case  ==  .Event:FlipTrigger % D
  208:  		Call  SetActorVar       ( .Actor:Self 00000001 00000001 )
  220:  		Call  SetActorVar       ( .Actor:Self 00000002 00000001 )
  238:  		Call  SetIdleAnimations ( .Actor:Self 00000001 $IdleAnimations_8022E61C_07 )
  250:  		Call  SetDefenseTable   ( .Actor:Self 00000001 $DefenseTable_8022E44C_07 )
  268:  		Call  SetTargetOffset   ( .Actor:Self 00000001  0`  18` )
  284:  		Call  GetActorVar       ( .Actor:Self 00000001 *Var0 )
  29C:  		If  *Var0  ==  00000000 
  2AC:  			Call  SetAnimation  ( .Actor:Self 00000001 0066020B )
  2C4:  			Call  SetActorRotationOffset    ( .Actor:Self 00000000 0000000C 00000000 )
  2E0:  			Thread
  2E8:  				Wait  4`
  2F4:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 0000001E )
  310:  				Wait  1`
  31C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  338:  				Wait  1`
  344:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFE2 )
  360:  				Wait  1`
  36C:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFC4 )
  388:  				Wait  1`
  394:  				Call  SetActorRotation  ( .Actor:Self 00000000 00000000 FFFFFFB5 )
  3B0:  				Wait  1`
  3BC:  			EndThread
  3C4:  		Else
  3CC:  			Call  SetAnimation  ( .Actor:Self 00000001 0066020C )
  3E4:  		EndIf
  3EC:  		UseIntBuffer  $IntTable_80230CD0_07 
  3F8:  		Loop  00000016 
  404:  			Get1Int  *Var0 
  410:  			Call  SetActorDispOffset    ( .Actor:Self 00000000 *Var0 00000000 )
  42C:  			Wait  1`
  438:  		EndLoop
  440:  		Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
  45C:  		Call  SetActorRotation  ( .Actor:Self 00000000 00000000 00000000 )
  478:  	CaseOR  ==  00000017 % 17
  484:  	CaseOR  ==  .Event:Immune % 19
  490:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  4A8:  		If  *Var0  ==  00000000 
  4B8:  			SetConst  *Var0  00000001 
  4C8:  			SetConst  *Var1  00660208 
  4D8:  			ExecWait  DoImmune 
  4E4:  			Call  GetStatusFlags    ( .Actor:Self *Var0 )
  4F8:  			If  *Var0  ==  ~Flags:StatusFlags:0 % 0
  508:  				Call  SetAnimation  ( .Actor:Self 00000001 00660209 )
  520:  				Wait  10`
  52C:  			EndIf
  534:  		Else
  53C:  			SetConst  *Var0  00000001 
  54C:  			SetConst  *Var1  0066020C 
  55C:  			ExecWait  DoImmune 
  568:  		EndIf
  570:  	EndCaseGroup
  578:  	Case  ==  .Event:Death % 20
  584:  		SetConst  *Var0  00000001 
  594:  		SetConst  *Var1  0066020B 
  5A4:  		ExecWait  DoNormalHit 
  5B0:  		SetConst  *Var0  00000001 
  5C0:  		SetConst  *Var1  0066020B 
  5D0:  		ExecWait  DoDeath 
  5DC:  		Return
  5E4:  	Case  ==  .Event:RecoverStatus % 31
  5F0:  		Call  GetActorVar   ( .Actor:Self 00000001 *Var0 )
  608:  		If  *Var0  ==  00000000 
  618:  			SetConst  *Var0  00000001 
  628:  			SetConst  *Var1  00660204 
  638:  			ExecWait  DoRecover 
  644:  		EndIf
  64C:  EndSwitch
  654:  Call  EnableIdleScript  ( .Actor:Self 00000001 )
  668:  Call  UseIdleAnimation  ( .Actor:Self .True )
  67C:  Return
  684:  End
}

#new:Script $Script_TakeTurn_YNinjakoopa_07 {
    0:  Return
    8:  End
}

#new:Script $Script_NormalAttack {
    Call  UseBattleCamPreset    ( 0000003F )
  494:  	Call  BattleCamTargetActor  ( .Actor:Self )
  4A4:  	Wait  10`
  4B0:  	Call  SetAnimation  ( .Actor:Self 00000001 00660208 )
  4C8:  	Wait  10`
  4D4:  	ChildThread
  4DC:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  4F8:  		Add   *Var1  00000004
  508:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  54C:  		Wait  3`
  558:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  59C:  		Wait  2`
  5A8:  		Call  PlayEffect    ( ~FX:SmokeImpact:Small *Var0 *Var1 *Var2 00000020 00000004 00000000 0000000A 00000000 00000000 00000000 00000000 00000000 )
  5EC:  	EndChildThread
  5F4:  	Call  PlaySoundAtActor  ( .Actor:Self 00002021 )
  608:  	Call  SetAnimation      ( .Actor:Self 00000001 00660207 )
  620:  	Wait  10`
  62C:  	Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  64C:  Call  PlaySoundAtActor  ( .Actor:Self 000020D3 )
  660:  Call  SetActorSounds    ( .Actor:Self .ActorSound:Walk 00000000 00000000 )
  67C:  Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:0 00000000 00000001 00000010 )
  6A0:  Switch  *Var0
  6AC:  	CaseOR  ==  .HitResult:Miss % 6
  6B8:  	CaseOR  ==  .HitResult:Lucky % 5
  6C4:  		Set   *VarA  *Var0
  6D4:  		Call  SetGoalToTarget   ( .Actor:Self )
  6E4:  		Call  AddGoalPos        ( .Actor:Self  -40`  0`  0` )
  700:  		Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  714:  		Call  RunToGoal ( .Actor:Self  0` .False )
  72C:  		Call  GetBattlePhase    ( *Var0 )
  73C:  		If  *Var0  ==  00000001
  74C:  			Call  UseBattleCamPreset    ( 00000005 )
  75C:  			Call  SetBattleCamZoom      (  300` )
  76C:  			Call  SetBattleCamOffsetZ   (  20` )
  77C:  			Call  MoveBattleCamOver     (  10` )
  78C:  			Call  8024ECF8  ( FFFFFFFF 00000001 00000000 )
  7A4:  		EndIf
  7AC:  		Call  SetAnimation  ( .Actor:Self 00000001 00660209 )
  7C4:  		Wait  8`
  7D0:  		Call  ResetAllActorSounds   ( .Actor:Self )
  7E0:  		Call  SetActorYaw   ( .Actor:Self  180` )
  7F4:  		Wait  4`
  800:  		If  *VarA  ==  .HitResult:Lucky % 5
  810:  			Call  EnemyTestTarget   ( .Actor:Self *Var0 ~Flags:DamageType:TriggerLucky 00000000 00000000 00000000 )
  834:  		EndIf
  83C:  		Call  SetAnimation  ( .Actor:Self 00000001 0066021E )
  878:  		Call  GetActorPos   ( .Actor:Self *Var0 *Var1 *Var2 )
  894:  		Add   *Var1  00000014
  8A4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  8C0:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[2.0] )
  8D4:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  8F4:  		Call  SetAnimation  ( .Actor:Self 00000001 00660203 )
  90C:  		Wait  6`
  918:  		Sub   *Var1  00000014
  928:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  944:  		Call  JumpToGoal    ( .Actor:Self  5` .False .True .False )
  964:  		Call  UseBattleCamPreset    ( 00000002 )
  974:  		Call  YieldTurn ( )
  980:  		Call  SetActorYaw   ( .Actor:Self  180` )
  994:  		Call  AddActorDecoration    ( .Actor:Self 00000001 00000000 .Decoration:Sweat )
  9B0:  		Call  SetAnimation  ( .Actor:Self 00000001 00660203 )
  9C8:  		Call  SetGoalToHome ( .Actor:Self )
  9D8:  		Call  SetActorSpeed ( .Actor:Self *Fixed[8.0] )
  9EC:  		Call  RunToGoal     ( .Actor:Self  0` .False )
  A04:  		Call  SetAnimation  ( .Actor:Self 00000001 00660204 )
  A1C:  		Call  RemoveActorDecoration ( .Actor:Self 00000001 00000000 )
  A34:  		Call  SetPartYaw    ( .Actor:Self 00000001  0` )
  A4C:  		Call  SetActorYaw   ( .Actor:Self  0` )
  A60:  		Call  EnableIdleScript      ( .Actor:Self 00000001 )
  A74:  		Call  UseIdleAnimation      ( .Actor:Self .True )
  A88:  		Return
  A90:  	EndCaseGroup
  A98:  EndSwitch
  AA0:  Call  SetGoalToTarget   ( .Actor:Self )
  AB0:  Call  SetActorSpeed     ( .Actor:Self *Fixed[16.0] )
  AC4:  Call  RunToGoal ( .Actor:Self  0` .False )
  ADC:  Call  ResetAllActorSounds   ( .Actor:Self )
  AEC:  Wait  2`
  AF8:  Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000002 00000020 )
  B20:  Switch  *Var0
  B2C:  	CaseOR  ==  .HitResult:Hit % 0
  B38:  	CaseOR  ==  .HitResult:QuakeImmune % 2
  B44:  		
  B54:  		Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  B70:  		Add   *Var0  00000028
  B80:  		Set   *Var1  00000000
  B90:  		Call  SetActorJumpGravity   ( .Actor:Self *Fixed[1.8] )
  BA4:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  BC0:  		Call  JumpToGoal    ( .Actor:Self  10` .False .True .False )
  BE0:  		Add   *Var0  0000001E
  BF0:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C0C:  		Call  JumpToGoal    ( .Actor:Self  8` .False .True .False )
  C2C:  		Add   *Var0  00000014
  C3C:  		Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
  C58:  		Call  JumpToGoal    ( .Actor:Self  6` .False .True .False )
  C78:  		Call  SetAnimation  ( .Actor:Self 00000001 00660209 )
  C90:  		Wait  8`
            Call RandInt ( 2` *Var0 )
            If *Var0  ==  0`
                Call  SetAnimation  ( .Actor:Self 00000001 00660210 )
                Call  SetTargetActor    ( .Actor:Self .Actor:Partner )
                Call  SetGoalToTarget   ( .Actor:Self )
                Thread
                    Call  BattleCamTargetActor  ( .Actor:Partner )
                    Wait 15`
                    Call SetAnimation (  .Actor:Self 00000001 00660212 )
                EndThread
                Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
                Add   *Var0  00000010
                Add   *Var1  00000030
                Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
                Call  SetActorRotationOffset    ( .Actor:Self FFFFFFEB 00000022 00000000 )
                Call  JumpToGoal ( .Actor:Self 15` .False .True .False )
                Wait  2`
                
                Call  MakeLerp  ( 00000000 00000168 00000005 .Easing:Linear )
                    Label  0
                Call  UpdateLerp ( )
                Call  SetActorRotation  ( .Actor:Self 00000000 00000000 *Var0 )
                Wait  1`
                If  *Var1  ==  00000001 
                  	Goto  0
                EndIf
                
                Wait  10`
                Call  SetGoalToTarget   ( .Actor:Self )
                Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
                Add   *Var0  00000010
                Sub   *Var1  00000016
                Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
                Call  FallToGoal ( .Actor:Self 10` )
                Call  EnemyDamageTarget ( .Actor:Self *Var0 ~Flags:DamageType:0 0000FFFF 00000000 00000001 00000020 )
                Wait  8`
                Call  UseBattleCamPreset    ( 00000002 )
                Call  SetAnimation (  .Actor:Self 00000001 00660205 )
                Call  GetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
                Add   *Var0  00000050
                Set   *Var1  00000000
                Call  SetGoalPos    ( .Actor:Self *Var0 *Var1 *Var2 )
                Call  SetActorRotationOffset    ( .Actor:Self 00000000 00000000 00000000 )
                Call JumpToGoal ( .Actor:Self 20` .False .False .False)
                Wait 10`
            EndIf



  C9C:  		Call  YieldTurn ( )
  CA8:  		SetConst  *Var0  00000001
  CB8:  		SetConst  *Var1  00660203
  CC8:  		ExecWait  DoReturnHome
  CD4:  		Call  SetAnimation  ( .Actor:Self 00000001 00660203 )
  CEC:  	EndCaseGroup
  CF4:  EndSwitch
  Return
  End
}

#new:Script $Script_NextTurn_YNinjakoopa_07 {
    0:  Return
    8:  End
}

#new:Function $Function_802187E0_05 {
    0:  ADDIU     SP, SP, FFD8
    4:  SW        S1, 14 (SP)
    8:  COPY      S1, A0
    C:  SW        RA, 20 (SP)
   10:  SW        S3, 1C (SP)
   14:  SW        S2, 18 (SP)
   18:  SW        S0, 10 (SP)
   1C:  LW        S0, C (S1)
   20:  LW        A1, 0 (S0)
   24:  JAL       ~Func:get_variable
   28:  ADDIU     S0, S0, 4
   2C:  LW        A1, 0 (S0)
   30:  ADDIU     S0, S0, 4
   34:  COPY      A0, S1
   38:  JAL       ~Func:get_variable
   3C:  COPY      S3, V0
   40:  LW        A1, 0 (S0)
   44:  ADDIU     S0, S0, 4
   48:  COPY      A0, S1
   4C:  JAL       ~Func:get_variable
   50:  COPY      S2, V0
   54:  COPY      A0, S1
   58:  LW        A1, 0 (S0)
   5C:  JAL       ~Func:get_variable
   60:  COPY      S0, V0
   64:  LW        A0, 148 (S1)
   68:  JAL       ~Func:get_actor
   6C:  COPY      S1, V0
   70:  COPY      V1, V0
   74:  LW        V0, 8 (V1)
   78:  LBU       V0, 24 (V0)
   7C:  LW        A0, 8 (V1)
   80:  SUBU      S3, S3, V0
   84:  SB        S3, 194 (V1)
   88:  LBU       V0, 25 (A0)
   8C:  SUBU      S2, S2, V0
   90:  SB        S2, 195 (V1)
   94:  LBU       V0, 26 (A0)
   98:  SUBU      S0, S0, V0
   9C:  SB        S0, 196 (V1)
   A0:  LBU       A0, 27 (A0)
   A4:  SUBU      S1, S1, A0
   A8:  SB        S1, 197 (V1)
   AC:  LW        RA, 20 (SP)
   B0:  LW        S3, 1C (SP)
   B4:  LW        S2, 18 (SP)
   B8:  LW        S1, 14 (SP)
   BC:  LW        S0, 10 (SP)
   C0:  LI        V0, 2
   C4:  JR        RA
   C8:  ADDIU     SP, SP, 28
}